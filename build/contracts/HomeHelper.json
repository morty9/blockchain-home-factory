{
  "contractName": "HomeHelper",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_homeAddress",
          "type": "string"
        },
        {
          "name": "_homePrice",
          "type": "uint256"
        },
        {
          "name": "_homePicture",
          "type": "string"
        }
      ],
      "name": "_createHome",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getHomeByIndex",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "homes",
      "outputs": [
        {
          "name": "homeAddress",
          "type": "string"
        },
        {
          "name": "homePrice",
          "type": "uint256"
        },
        {
          "name": "homePicture",
          "type": "string"
        },
        {
          "name": "homeOwner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "receiverAddress",
          "type": "address"
        },
        {
          "name": "homeIndex",
          "type": "uint256"
        },
        {
          "name": "homePrice",
          "type": "uint256"
        }
      ],
      "name": "sendCoinToBuyHome",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "homeToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getHomes",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "homeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "homeAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "homePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "homePicture",
          "type": "string"
        }
      ],
      "name": "NewHome",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getHomesByOwner",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361164a806100cf6000396000f3fe6080604052600436106100ae576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062d6331f146100b35780631dcee2551461021c57806361b0ef0a1461037d578063715018a6146104d757806380a4628f146104ee5780638250034e146105465780638d4d3e38146105c15780638da5cb5b146106675780638f32d59b146106be578063a33d4924146106ed578063f2fde38b14610759575b600080fd5b3480156100bf57600080fd5b5061021a600480360360608110156100d657600080fd5b81019080803590602001906401000000008111156100f357600080fd5b82018360208201111561010557600080fd5b8035906020019184600183028401116401000000008311171561012757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019064010000000081111561019457600080fd5b8201836020820111156101a657600080fd5b803590602001918460018302840111640100000000831117156101c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107aa565b005b34801561022857600080fd5b506102556004803603602081101561023f57600080fd5b8101908080359060200190929190505050610aa9565b6040518080602001868152602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838103835288818151815260200191508051906020019080838360005b838110156102d75780820151818401526020810190506102bc565b50505050905090810190601f1680156103045780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101561033d578082015181840152602081019050610322565b50505050905090810190601f16801561036a5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561038957600080fd5b506103b6600480360360208110156103a057600080fd5b8101908080359060200190929190505050610ce1565b6040518080602001858152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835287818151815260200191508051906020019080838360005b83811015610432578082015181840152602081019050610417565b50505050905090810190601f16801561045f5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561049857808201518184015260208101905061047d565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b3480156104e357600080fd5b506104ec610e70565b005b6105446004803603606081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610f42565b005b34801561055257600080fd5b5061057f6004803603602081101561056957600080fd5b8101908080359060200190929190505050610fa9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105cd57600080fd5b50610610600480360360208110156105e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fdc565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610653578082015181840152602081019050610638565b505050509050019250505060405180910390f35b34801561067357600080fd5b5061067c61110d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106ca57600080fd5b506106d3611136565b604051808215151515815260200191505060405180910390f35b3480156106f957600080fd5b5061070261118d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561074557808201518184015260208101905061072a565b505050509050019250505060405180910390f35b34801561076557600080fd5b506107a86004803603602081101561077c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112c4565b005b60006001806080604051908101604052808781526020018681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061082e929190611579565b50602082015181600101556040820151816002019080519060200190610855929190611579565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050039050336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109476001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112e390919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f643e7f2a842321e762638e9c99102722cf86c51a300233a7d043e3e5b18b1d8181858585604051808581526020018060200184815260200180602001838103835286818151815260200191508051906020019080838360005b838110156109ff5780820151818401526020810190506109e4565b50505050905090810190601f168015610a2c5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610a65578082015181840152602081019050610a4a565b50505050905090810190601f168015610a925780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a150505050565b60606000606060008060606000606060008060008090505b600180549050811015610cc357808c1415610cb657600181815481101515610ae557fe5b90600052602060002090600402016000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b8a5780601f10610b5f57610100808354040283529160200191610b8a565b820191906000526020600020905b815481529060010190602001808311610b6d57829003601f168201915b50505050509550600181815481101515610ba057fe5b9060005260206000209060040201600101549450600181815481101515610bc357fe5b90600052602060002090600402016002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c685780601f10610c3d57610100808354040283529160200191610c68565b820191906000526020600020905b815481529060010190602001808311610c4b57829003601f168201915b50505050509350600181815481101515610c7e57fe5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508091505b8080600101915050610ac1565b50848484848499509950995099509950505050505091939590929450565b600181815481101515610cf057fe5b9060005260206000209060040201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d9c5780601f10610d7157610100808354040283529160200191610d9c565b820191906000526020600020905b815481529060010190602001808311610d7f57829003601f168201915b505050505090806001015490806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e405780601f10610e1557610100808354040283529160200191610e40565b820191906000526020600020905b815481529060010190602001808311610e2357829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b610e78611136565b1515610e8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b80803410151515610f5257600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f98573d6000803e3d6000fd5b50610fa38484611301565b50505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405190808252806020026020018201604052801561104d5781602001602082028038833980820191505090505b509050600080905060008090505b600180549050811015611102578473ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156110f5578083838151811015156110de57fe5b906020019060200201818152505081806001019250505b808060010191505061105b565b508192505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600180549050036040519080825280602002602001820160405280156112055781602001602082028038833980820191505090505b509050600080905060008090505b6001805490508110156112bb573373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156112ae5780838381518110151561129757fe5b906020019060200201818152505081806001019250505b8080600101915050611213565b50819250505090565b6112cc611136565b15156112d757600080fd5b6112e08161147f565b50565b60008082840190508381101515156112f757fe5b8091505092915050565b60008090505b60018054905081101561147a578181141561146d573360018281548110151561132c57fe5b906000526020600020906004020160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055505b8080600101915050611307565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156114bb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115ba57805160ff19168380011785556115e8565b828001600101855582156115e8579182015b828111156115e75782518255916020019190600101906115cc565b5b5090506115f591906115f9565b5090565b61161b91905b808211156116175760008160009055506001016115ff565b5090565b9056fea165627a7a72305820b1a84619c2b3f7efa22bec4c0351092461e7665d5d33da65ca4d3b34755e41840029",
  "deployedBytecode": "0x6080604052600436106100ae576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062d6331f146100b35780631dcee2551461021c57806361b0ef0a1461037d578063715018a6146104d757806380a4628f146104ee5780638250034e146105465780638d4d3e38146105c15780638da5cb5b146106675780638f32d59b146106be578063a33d4924146106ed578063f2fde38b14610759575b600080fd5b3480156100bf57600080fd5b5061021a600480360360608110156100d657600080fd5b81019080803590602001906401000000008111156100f357600080fd5b82018360208201111561010557600080fd5b8035906020019184600183028401116401000000008311171561012757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019064010000000081111561019457600080fd5b8201836020820111156101a657600080fd5b803590602001918460018302840111640100000000831117156101c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107aa565b005b34801561022857600080fd5b506102556004803603602081101561023f57600080fd5b8101908080359060200190929190505050610aa9565b6040518080602001868152602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838103835288818151815260200191508051906020019080838360005b838110156102d75780820151818401526020810190506102bc565b50505050905090810190601f1680156103045780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101561033d578082015181840152602081019050610322565b50505050905090810190601f16801561036a5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561038957600080fd5b506103b6600480360360208110156103a057600080fd5b8101908080359060200190929190505050610ce1565b6040518080602001858152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835287818151815260200191508051906020019080838360005b83811015610432578082015181840152602081019050610417565b50505050905090810190601f16801561045f5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561049857808201518184015260208101905061047d565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b3480156104e357600080fd5b506104ec610e70565b005b6105446004803603606081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610f42565b005b34801561055257600080fd5b5061057f6004803603602081101561056957600080fd5b8101908080359060200190929190505050610fa9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105cd57600080fd5b50610610600480360360208110156105e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fdc565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610653578082015181840152602081019050610638565b505050509050019250505060405180910390f35b34801561067357600080fd5b5061067c61110d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106ca57600080fd5b506106d3611136565b604051808215151515815260200191505060405180910390f35b3480156106f957600080fd5b5061070261118d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561074557808201518184015260208101905061072a565b505050509050019250505060405180910390f35b34801561076557600080fd5b506107a86004803603602081101561077c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112c4565b005b60006001806080604051908101604052808781526020018681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061082e929190611579565b50602082015181600101556040820151816002019080519060200190610855929190611579565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050039050336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109476001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112e390919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f643e7f2a842321e762638e9c99102722cf86c51a300233a7d043e3e5b18b1d8181858585604051808581526020018060200184815260200180602001838103835286818151815260200191508051906020019080838360005b838110156109ff5780820151818401526020810190506109e4565b50505050905090810190601f168015610a2c5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610a65578082015181840152602081019050610a4a565b50505050905090810190601f168015610a925780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a150505050565b60606000606060008060606000606060008060008090505b600180549050811015610cc357808c1415610cb657600181815481101515610ae557fe5b90600052602060002090600402016000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b8a5780601f10610b5f57610100808354040283529160200191610b8a565b820191906000526020600020905b815481529060010190602001808311610b6d57829003601f168201915b50505050509550600181815481101515610ba057fe5b9060005260206000209060040201600101549450600181815481101515610bc357fe5b90600052602060002090600402016002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c685780601f10610c3d57610100808354040283529160200191610c68565b820191906000526020600020905b815481529060010190602001808311610c4b57829003601f168201915b50505050509350600181815481101515610c7e57fe5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508091505b8080600101915050610ac1565b50848484848499509950995099509950505050505091939590929450565b600181815481101515610cf057fe5b9060005260206000209060040201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d9c5780601f10610d7157610100808354040283529160200191610d9c565b820191906000526020600020905b815481529060010190602001808311610d7f57829003601f168201915b505050505090806001015490806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e405780601f10610e1557610100808354040283529160200191610e40565b820191906000526020600020905b815481529060010190602001808311610e2357829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b610e78611136565b1515610e8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b80803410151515610f5257600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f98573d6000803e3d6000fd5b50610fa38484611301565b50505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405190808252806020026020018201604052801561104d5781602001602082028038833980820191505090505b509050600080905060008090505b600180549050811015611102578473ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156110f5578083838151811015156110de57fe5b906020019060200201818152505081806001019250505b808060010191505061105b565b508192505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600180549050036040519080825280602002602001820160405280156112055781602001602082028038833980820191505090505b509050600080905060008090505b6001805490508110156112bb573373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156112ae5780838381518110151561129757fe5b906020019060200201818152505081806001019250505b8080600101915050611213565b50819250505090565b6112cc611136565b15156112d757600080fd5b6112e08161147f565b50565b60008082840190508381101515156112f757fe5b8091505092915050565b60008090505b60018054905081101561147a578181141561146d573360018281548110151561132c57fe5b906000526020600020906004020160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055505b8080600101915050611307565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156114bb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115ba57805160ff19168380011785556115e8565b828001600101855582156115e8579182015b828111156115e75782518255916020019190600101906115cc565b5b5090506115f591906115f9565b5090565b61161b91905b808211156116175760008160009055506001016115ff565b5090565b9056fea165627a7a72305820b1a84619c2b3f7efa22bec4c0351092461e7665d5d33da65ca4d3b34755e41840029",
  "sourceMap": "54:376:3:-;;;510:10:6;501:6;;:19;;;;;;;;;;;;;;;;;;564:6;;;;;;;;;;;531:40;;560:1;531:40;;;;;;;;;;;;54:376:3;;;;;;",
  "deployedSourceMap": "54:376:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:358:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;719:358:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;719:358:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;719:358:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;719:358:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;719:358:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;719:358:1;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;719:358:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;719:358:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;719:358:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;719:358:1;;;;;;;;;;;;;;;;;;1760:672;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1760:672:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1760:672:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1760:672:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1760:672:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:19:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;454:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;454:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;454:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1254:127:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1254:127:6;;;;;;2767:207:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2767:207:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;557:44:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;557:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;94:333:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;94:333:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;94:333:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;94:333:3;;;;;;;;;;;;;;;;;629:70:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:70:6;;;;;;;;;;;;;;;;;;;;;;;;;;;912:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;912:83:6;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:338:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1081:338:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1081:338:1;;;;;;;;;;;;;;;;;1539:101:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1539:101:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1539:101:6;;;;;;;;;;;;;;;;;;;;;;719:358:1;826:7;907:1;836:5;847:56;;;;;;;;;852:12;847:56;;;;866:10;847:56;;;;878:12;847:56;;;;892:10;847:56;;;;;836:68;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;836:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:72;826:82;;932:10;914:11;:15;926:2;914:15;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;977:33;1008:1;977:14;:26;992:10;977:26;;;;;;;;;;;;;;;;:30;;:33;;;;:::i;:::-;948:14;:26;963:10;948:26;;;;;;;;;;;;;;;:62;;;;1021:51;1029:2;1033:12;1047:10;1059:12;1021:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1021:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1021:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:358;;;;:::o;1760:672::-;1819:13;1834:4;1840:13;1855:7;1864:4;1876:32;1914:21;1941:32;1979:24;2009:14;2034:6;2043:1;2034:10;;2029:299;2050:5;:12;;;;2046:1;:16;2029:299;;;2091:1;2081:6;:11;2077:245;;;2125:5;2131:1;2125:8;;;;;;;;;;;;;;;;;;;;:20;;2104:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:5;2180:1;2174:8;;;;;;;;;;;;;;;;;;;;:18;;;2155:37;;2223:5;2229:1;2223:8;;;;;;;;;;;;;;;;;;;;:20;;2202:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:5;2278:1;2272:8;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;2253:37;;2312:1;2300:13;;2077:245;2064:3;;;;;;;2029:299;;;;2341:18;2361:16;2379:18;2399:16;2417:9;2333:94;;;;;;;;;;;;;;;1760:672;;;;;;;:::o;454:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1254:127:6:-;812:9;:7;:9::i;:::-;804:18;;;;;;;;1348:1;1311:40;;1332:6;;;;;;;;;;;1311:40;;;;;;;;;;;;1374:1;1357:6;;:19;;;;;;;;;;;;;;;;;;1254:127::o;2767:207:1:-;2867:9;535:5;522:9;:18;;514:27;;;;;;;;2894:10;:19;;:30;2914:9;2894:30;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2894:30:1;2931:39;2943:15;2960:9;2931:11;:39::i;:::-;2767:207;;;;:::o;557:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;94:333:3:-;157:13;178:20;212:14;:22;227:6;212:22;;;;;;;;;;;;;;;;201:34;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;201:34:3;;;;178:57;;241:12;256:1;241:16;;268:6;277:1;268:10;;263:141;284:5;:12;;;;280:1;:16;263:141;;;333:6;315:24;;:11;:14;327:1;315:14;;;;;;;;;;;;;;;;;;;;;:24;;;311:87;;;369:1;351:6;358:7;351:15;;;;;;;;;;;;;;;;;:19;;;;;380:9;;;;;;;311:87;298:3;;;;;;;263:141;;;;416:6;409:13;;;;94:333;;;:::o;629:70:6:-;666:7;688:6;;;;;;;;;;;681:13;;629:70;:::o;912:83::-;951:4;984:6;;;;;;;;;;;970:20;;:10;:20;;;963:27;;912:83;:::o;1081:338:1:-;1123:13;1144:21;1194:14;:26;1209:10;1194:26;;;;;;;;;;;;;;;;1179:5;:12;;;;:41;1168:53;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1168:53:1;;;;1144:77;;1227:12;1242:1;1227:16;;1254:6;1263:1;1254:10;;1249:146;1270:5;:12;;;;1266:1;:16;1249:146;;;1319:10;1301:28;;:11;:14;1313:1;1301:14;;;;;;;;;;;;;;;;;;;;;:28;;;;1297:92;;;1360:1;1341:7;1349;1341:16;;;;;;;;;;;;;;;;;:20;;;;;1371:9;;;;;;;1297:92;1284:3;;;;;;;1249:146;;;;1407:7;1400:14;;;;1081:338;:::o;1539:101:6:-;812:9;:7;:9::i;:::-;804:18;;;;;;;;1607:28;1626:8;1607:18;:28::i;:::-;1539:101;:::o;1005:129:7:-;1063:7;1078:9;1094:1;1090;:5;1078:17;;1113:1;1108;:6;;1101:14;;;;;;1128:1;1121:8;;;1005:129;;;;:::o;2436:327:1:-;2516:6;2525:1;2516:10;;2511:248;2532:5;:12;;;;2528:1;:16;2511:248;;;2568:8;2563:1;:13;2559:194;;;2609:10;2588:5;2594:1;2588:8;;;;;;;;;;;;;;;;;;;;:18;;;:31;;;;;;;;;;;;;;;;;;2653:10;2629:11;:21;2641:8;2629:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2673:14;:26;2688:10;2673:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;2711:14;:31;2726:15;2711:31;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;2559:194;2546:3;;;;;;;2511:248;;;;2436:327;;:::o;1771:169:6:-;1860:1;1840:22;;:8;:22;;;;1832:31;;;;;;;;1903:8;1874:38;;1895:6;;;;;;;;;;;1874:38;;;;;;;;;;;;1927:8;1918:6;;:17;;;;;;;;;;;;;;;;;;1771:169;:::o;54:376:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./HomeFeeding.sol\";\n\ncontract HomeHelper is HomeFeeding {\n\n  function getHomesByOwner(address _owner) external view returns(uint[] memory) {\n    uint[] memory result = new uint[](ownerHomeCount[_owner]);\n    uint counter = 0;\n    for (uint i = 0; i < homes.length; i++) {\n      if (homeToOwner[i] == _owner) {\n        result[counter] = i;\n        counter++;\n      }\n    }\n    return result;\n  }\n\n}\n",
  "sourcePath": "/Users/berangerelatouche/Desktop/blockchain/contracts/HomeHelper.sol",
  "ast": {
    "absolutePath": "/Users/berangerelatouche/Desktop/blockchain/contracts/HomeHelper.sol",
    "exportedSymbols": {
      "HomeHelper": [
        503
      ]
    },
    "id": 504,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 443,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/berangerelatouche/Desktop/blockchain/contracts/HomeFeeding.sol",
        "file": "./HomeFeeding.sol",
        "id": 444,
        "nodeType": "ImportDirective",
        "scope": 504,
        "sourceUnit": 442,
        "src": "25:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 445,
              "name": "HomeFeeding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 441,
              "src": "77:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HomeFeeding_$441",
                "typeString": "contract HomeFeeding"
              }
            },
            "id": 446,
            "nodeType": "InheritanceSpecifier",
            "src": "77:11:3"
          }
        ],
        "contractDependencies": [
          420,
          441,
          765
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 503,
        "linearizedBaseContracts": [
          503,
          441,
          420,
          765
        ],
        "name": "HomeHelper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "172:255:3",
              "statements": [
                {
                  "assignments": [
                    457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 457,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "178:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 455,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "178:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 456,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "178:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 465,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "ownerHomeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "212:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 463,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 462,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "227:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "212:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "201:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 458,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "205:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 459,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "205:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "201:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "178:57:3"
                },
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "241:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 466,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 469,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "256:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "241:16:3"
                },
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "303:101:3",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 481,
                              "name": "homeToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "315:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 483,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 482,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "327:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "315:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 484,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "333:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "315:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 496,
                        "nodeType": "IfStatement",
                        "src": "311:87:3",
                        "trueBody": {
                          "id": 495,
                          "nodeType": "Block",
                          "src": "341:57:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 486,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 457,
                                    "src": "351:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 488,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 487,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 467,
                                    "src": "358:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "351:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 489,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "369:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "351:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 491,
                              "nodeType": "ExpressionStatement",
                              "src": "351:19:3"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "380:9:3",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 492,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 467,
                                  "src": "380:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 494,
                              "nodeType": "ExpressionStatement",
                              "src": "380:9:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 474,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "280:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "homes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "284:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Home_$53_storage_$dyn_storage",
                          "typeString": "struct HomeFactory.Home storage ref[] storage ref"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "284:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "280:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 498,
                  "initializationExpression": {
                    "assignments": [
                      471
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 471,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "268:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "268:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 473,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "277:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "268:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "298:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 478,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "298:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 480,
                    "nodeType": "ExpressionStatement",
                    "src": "298:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "263:141:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 457,
                    "src": "416:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 453,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "409:13:3"
                }
              ]
            },
            "documentation": null,
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHomesByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "119:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "119:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "118:16:3"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "157:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 450,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "157:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 451,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "157:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:15:3"
            },
            "scope": 503,
            "src": "94:333:3",
            "stateMutability": "view",
            "superFunction": 252,
            "visibility": "external"
          }
        ],
        "scope": 504,
        "src": "54:376:3"
      }
    ],
    "src": "0:431:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/berangerelatouche/Desktop/blockchain/contracts/HomeHelper.sol",
    "exportedSymbols": {
      "HomeHelper": [
        503
      ]
    },
    "id": 504,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 443,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/berangerelatouche/Desktop/blockchain/contracts/HomeFeeding.sol",
        "file": "./HomeFeeding.sol",
        "id": 444,
        "nodeType": "ImportDirective",
        "scope": 504,
        "sourceUnit": 442,
        "src": "25:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 445,
              "name": "HomeFeeding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 441,
              "src": "77:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HomeFeeding_$441",
                "typeString": "contract HomeFeeding"
              }
            },
            "id": 446,
            "nodeType": "InheritanceSpecifier",
            "src": "77:11:3"
          }
        ],
        "contractDependencies": [
          420,
          441,
          765
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 503,
        "linearizedBaseContracts": [
          503,
          441,
          420,
          765
        ],
        "name": "HomeHelper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "172:255:3",
              "statements": [
                {
                  "assignments": [
                    457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 457,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "178:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 455,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "178:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 456,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "178:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 465,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "ownerHomeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "212:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 463,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 462,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "227:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "212:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "201:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 458,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "205:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 459,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "205:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "201:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "178:57:3"
                },
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "241:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 466,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 469,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "256:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "241:16:3"
                },
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "303:101:3",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 481,
                              "name": "homeToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "315:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 483,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 482,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "327:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "315:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 484,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "333:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "315:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 496,
                        "nodeType": "IfStatement",
                        "src": "311:87:3",
                        "trueBody": {
                          "id": 495,
                          "nodeType": "Block",
                          "src": "341:57:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 486,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 457,
                                    "src": "351:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 488,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 487,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 467,
                                    "src": "358:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "351:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 489,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "369:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "351:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 491,
                              "nodeType": "ExpressionStatement",
                              "src": "351:19:3"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "380:9:3",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 492,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 467,
                                  "src": "380:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 494,
                              "nodeType": "ExpressionStatement",
                              "src": "380:9:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 474,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "280:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "homes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "284:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Home_$53_storage_$dyn_storage",
                          "typeString": "struct HomeFactory.Home storage ref[] storage ref"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "284:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "280:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 498,
                  "initializationExpression": {
                    "assignments": [
                      471
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 471,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "268:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "268:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 473,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "277:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "268:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "298:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 478,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "298:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 480,
                    "nodeType": "ExpressionStatement",
                    "src": "298:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "263:141:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 457,
                    "src": "416:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 453,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "409:13:3"
                }
              ]
            },
            "documentation": null,
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHomesByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "119:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "119:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "118:16:3"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "157:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 450,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "157:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 451,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "157:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:15:3"
            },
            "scope": 503,
            "src": "94:333:3",
            "stateMutability": "view",
            "superFunction": 252,
            "visibility": "external"
          }
        ],
        "scope": 504,
        "src": "54:376:3"
      }
    ],
    "src": "0:431:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-08T16:52:23.433Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}